{"version":3,"sources":["../src/AckMediaDevices.directive.ts"],"names":[],"mappings":"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","file":"AckMediaDevices.directive.js","sourceRoot":"","sourcesContent":["import { Directive, ElementRef, Input, Output, EventEmitter } from '@angular/core'\r\nimport {\r\n  audioInputsByDevices,\r\n  audioOutputsByDevices,\r\n  videoInputsByDevices,\r\n  //MediaDevice,\r\n  browser,\r\n  promiseDevices\r\n} from \"./videoHelp\"\r\n\r\n export class AckMediaDevices {\r\n   array:MediaDeviceInfo[] = []\r\n   arrayChange:EventEmitter<MediaDeviceInfo[]> = new EventEmitter()\r\n\r\n   error:Error\r\n   errorChange:EventEmitter<Error> = new EventEmitter()\r\n   catcher:EventEmitter<Error> = new EventEmitter()\r\n\r\n   videoInputs:MediaDeviceInfo[]\r\n   videoInputsChange:EventEmitter<MediaDeviceInfo[]> = new EventEmitter()\r\n\r\n   audioInputs:MediaDeviceInfo[]\r\n   audioInputsChange:EventEmitter<MediaDeviceInfo[]> = new EventEmitter()\r\n\r\n   audioOutputs:MediaDeviceInfo[]\r\n   audioOutputsChange:EventEmitter<MediaDeviceInfo[]> = new EventEmitter()\r\n\r\n  ngOnInit(){\r\n    this.loadDevices()\r\n  }\r\n\r\n  loadDevices():Promise<MediaDeviceInfo[]>{\r\n    return promiseDevices()\r\n    .then(devices=>this.onDevices(devices) && devices)\r\n    .catch(e=>{\r\n      this.catcher.emit(e)\r\n      this.errorChange.emit(this.error=e)\r\n      return Promise.reject(e)\r\n    })\r\n  }\r\n\r\n  onDevices(devices:MediaDeviceInfo[]):AckMediaDevices{\r\n    this.arrayChange.emit(this.array=devices)\r\n    \r\n    if(this.audioInputsChange.observers.length){\r\n      this.audioInputs = audioInputsByDevices(devices)\r\n      this.audioInputsChange.emit(this.audioInputs)\r\n    }\r\n    \r\n    if(this.audioOutputsChange.observers.length){\r\n      this.audioOutputs = audioOutputsByDevices(devices)\r\n      this.audioOutputsChange.emit(this.audioOutputs)\r\n    }\r\n\r\n    if(this.videoInputsChange.observers.length){\r\n      this.videoInputs = videoInputsByDevices(devices)\r\n      this.videoInputsChange.emit(this.videoInputs)\r\n    }\r\n\r\n    return this\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n  selector: 'ack-media-devices'\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'array': [{ type: Input },],\n'arrayChange': [{ type: Output },],\n'error': [{ type: Input },],\n'errorChange': [{ type: Output },],\n'catcher': [{ type: Output, args: ['catch', ] },],\n'videoInputs': [{ type: Input },],\n'videoInputsChange': [{ type: Output },],\n'audioInputs': [{ type: Input },],\n'audioInputsChange': [{ type: Output },],\n'audioOutputs': [{ type: Input },],\n'audioOutputsChange': [{ type: Output },],\n};\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}